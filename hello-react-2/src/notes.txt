 React.createElement(
    "ul", 
   { style: {color: "blue" } }, 
   React.createElement("li", null, "Hot Dogs"),
   React.createElement("li", null, "Hamburgers"),
   React.createElement("li", null, "Steaks"),
   React.createElement("li", null, "Sushi"),
 ),  

 <ul>
 <li>Hot Dog</li>
 <li>Hamburgers</li>
 <li>Steaks</li>
 <li>Sushi</li>
</ul>,

let city = {
  name: "Madrid",
  country: "Spain",
}; 

/* function Hello({library, message, number}) {
  //console.log(props);
  return (
    <div>
      <h1>Welcome to {library}!</h1>
      <p>{message}</p>
      <p>{number} Props total</p>
    </div>
  )
} */

ReactDOM.render(
  <Hello 
  library="React" 
  message="Add dynamic data!"
  number={3}
  />,
   document.getElementById('root')
 );

 function Lake(props) {
  return (
      <h1>{props.name}</h1>
  )
}

function App() {
  return (
    <div>
      <Lake name="Lake Tahoe"/>
      <Lake name="Angora Lake"/>
      <Lake name="Shirley Lake"/>
    </div>
  );
}

ReactDOM.render(
 <App/>,
  document.getElementById('root')
);

//Accessing Data from a list

const lakelist = [
  "Lake Tahoe",
  "Echo Lake",
  "Maud Lake",
  "Cascade Lake"
];

//Structure
function App(props) {
  return (
    <ul>
      {props.lakes.map(lake => (
        <li>{lake}</li>
      ))}
    </ul>
  );
}

//Destructure props
function Apps({lakes}){
  return (
    <ul>
      {lakes.map(lake => (
        <li>{lake}</li>
      ))}
    </ul>
  );
}

ReactDOM.render(
 <Apps lakes={lakelist}/>,
  document.getElementById('root')
);


const lakelist = [
  {id: "1", name: "Echo", trailhead: "Echo"},
  {id: "2", name: "Maud", trailhead: "Wrights"},
  {id: "3", name: "Velma", trailhead: "Bayview"}
];

//Structure
function App({lakes}) {
  return (
    <div>
      {lakes.map(lake => (
        <div>
          <h2>{lake.name}</h2>
          <p>Accesed by: {lake.trailhead}</p>
        </div>
      ))}
    </div>
  );
}


ReactDOM.render(
 <App lakes={lakelist}/>,
  document.getElementById('root')
);

//Mapping numbers

const lakelist = [
  {id: "1", name: "Echo", trailhead: "Echo"},
  {id: "2", name: "Maud", trailhead: "Wrights"},
  {id: "3", name: "Velma", trailhead: "Bayview"}
];

const list = [1, 2, 3, 4, 5];

//Structure
function App({lakes}) {
  return (
    <div>
      {lakes.map(lake => (
        <div key = {lake.id}>
          <h2>{lake.name}</h2>
          <p>Accesed by: {lake.trailhead}</p>
        </div>
      ))}
    </div>
  );
}

function App(props) {
  if(props.season === "summer"){
    return <Lake name="Jenny Lake" />;
  }else if(props.season === "winter"){
    return <SkiResort name="Jackson Hole Mountain Resort" />;
  }
 
}

function Apps({ items }){
  return (
    <ul>
      {items.map(item => (
        <li key={item.toString()}>{item}</li>
      ))}
    
    </ul>
  );
}


ReactDOM.render(
 <Apps items={list}/>,
  document.getElementById('root')
);

function Lake({name}){
  return (
    <div>
      <h1>Visit {name}!</h1>
    </div>
  )
}

function SkiResort({name}) {
  return (
    <div>
      <h1>Visit {name}!</h1>
    </div>
  )
}


function App(props) {
  return (
    <div>
      {(props.season === "summer" ? (
        <Lake name="Jenny Lake" /> 
        ) : props.season === "winter" ? (
          <SkiResort name="Jackson Hole Mountain Resort" />
        ) : (
          <h1>
            Come back in the winter or summer!
          </h1>
        )
      
      )}
    </div>
  )
 
}

ReactDOM.render(
 <App season="fall"/>,
  document.getElementById('root')
);

function App() {
  return (
    <React.Fragment>
      <Lake />
      <SkiResort />
    </React.Fragment>
  )
 
}

ReactDOM.render(
 <App season="fall"/>,
  document.getElementById('root')
);


//ARRAY DESTRUCTURING
const [, , fruit] = [
  "popcorn",
  "Pretzels",
  "Pineapple"
];

console.log(fruit);
console.log();
console.log();

/* State Changes */
function App({}){
  const [status, setStatus] = useState("Open");

  return (
    <div>
      <h1>Status: {status}</h1>
      <button onClick={() => setStatus("Open")}>
        Open
      </button>
      <button onClick={() => setStatus("Back is 5")}>
        Break
      </button>
      <button onClick={() => setStatus("Closed")}>
        Closed
      </button>
    </div>
  )
}


ReactDOM.render(
 <App />,
  document.getElementById('root')
);

/** State variable */

function App({}){
  const [year, setYear] = useState(2050);
  const [manager, setManager] = useState("Alex");
  const [status, setStatus] = useState("Open");

  return (
    <><div>
        <h1>{year}</h1>
        <button onClick={() => setYear(year + 1)}>New Year!</button>
      </div>
      <div>
        <h1>Manager on Duty: {manager}</h1>
        <button onClick={() => setManager("Rachel")}>
          New Manager
        </button>
      </div>
      <div>
        <h1>Status: {status}</h1>
        <button onClick={() => setStatus("Open")}>
          Open
        </button>
        <button onClick={() => setStatus("Back is 5")}>
          Break
        </button>
        <button onClick={() => setStatus("Closed")}>
          Closed
        </button>
      </div></>
  )
}


ReactDOM.render(
 <App />,
  document.getElementById('root')
);

function Checkbox() {
  const [checked, setChecked] = useState(false);

  useEffect(() => {
    alert(`checked: ${checked.toString()}`);
  });

  return (
    <>
    <input 
      type="checkbox" 
      value={checked} 
      onChange={() => 
        setChecked(checked => !checked)
      }
    />
    {checked ? "checked" : "not checked"}
    </>
  )
}

ReactDOM.render(
 <Checkbox />,
  document.getElementById('root')
);



